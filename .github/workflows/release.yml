name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish:
    name: Publish to npm & create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # wichtig fÃ¼r Tags / latest

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Show versions
        run: |
          echo "Ref:        $GITHUB_REF"
          echo "Ref name:   $GITHUB_REF_NAME"
          node -v
          npm -v

      - name: Verify tag matches package.json version
        id: ver
        run: |
          TAG="${GITHUB_REF_NAME#v}"                 # "v1.2.3" -> "1.2.3"
          PKG_VERSION=$(node -p "require('./package.json').version")
          echo "Tag version:       ${TAG}"
          echo "package.json ver.: ${PKG_VERSION}"
          if [ "${TAG}" != "${PKG_VERSION}" ]; then
            echo "::error::Tag (${TAG}) does not match package.json version (${PKG_VERSION})"
            exit 1
          fi
          echo "version=${TAG}" >> $GITHUB_OUTPUT

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-fund --no-audit
          else
            npm i --no-fund --no-audit
          fi

      - name: Run tests (if present)
        run: |
          if npm run | grep -q "^  test$"; then
            npm test
          else
            echo "No test script defined. Skipping."
          fi

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --access public

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
          draft: false
          prerelease: false

      - name: Move/Update 'latest' tag to this release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name  "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag -f latest "${GITHUB_SHA}"
          git push -f "https://${{ github.actor }}:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git" refs/tags/latest:refs/tags/latest